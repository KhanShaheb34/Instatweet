{"version":3,"sources":["redux/slices/sliceAuth.ts","redux/ReduxStore.ts","axios/interceptors/AuthInjector.ts","axios/interceptors/RedirectUnauthorize.ts","config/appRoutes.ts","axios/AxiosInstance.ts","controllers/post.ts","components/addPost.tsx","components/motionBox.tsx","controllers/comment.ts","components/comments.tsx","components/post.tsx","components/postSkeleton.tsx","components/logo.tsx","components/navbar.tsx","pages/layout.tsx","pages/home.tsx","controllers/auth.ts","components/loginForm.tsx","components/signupForm.tsx","pages/login.tsx","pages/logout.tsx","controllers/user.ts","components/editProfile.tsx","components/followButton.tsx","components/userSkeleton.tsx","pages/user.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","isLoggedIn","localStorage","getItem","id","username","token","sliceAuth","createSlice","name","reducers","login","state","action","setItem","payload","user","logout","clear","actions","ReducerAuth","reducer","RootReducer","combineReducers","auth","ActionAppTypeResetStore","ITAppStore","configureStore","arg","type","undefined","devTools","process","useAppDispatch","useDispatch","useAppSelector","createSelectorHook","AuthInjector","instance","interceptors","request","use","requestConfig","header","authorization","headers","eject","RedirectUnauthorize","redirectPath","onRedirect","OnFailure","window","location","href","err","a","response","status","Error","JSON","stringify","isSuccess","error","message","r","AppRouteApi","Root","User","Login","SingleUser","Post","Like","Comment","Follow","Check","AppRouteUi","Home","Logout","AxiosAuth","Axios","create","Add","getAllPosts","get","res","data","likePost","postId","post","createPost","content","deletePost","delete","AddPost","onPost","useState","isButtonLoading","setIsButtonLoading","setContent","handleSubmit","event","preventDefault","as","my","background","border","p","rounded","display","src","width","height","flexGrow","ml","flexDirection","alignItems","resize","fontSize","maxLength","shadow","outline","pt","_focus","placeholder","_placeholder","value","onChange","e","target","length","colorScheme","mb","disabled","variant","onClick","MotionBox","motion","Box","makeComment","getPostComments","deleteComment","commentId","CommentsModal","isOpen","onClose","newComment","setNewComment","isLoading","setIsLoading","comments","setComments","useEffect","then","handleDelete","filter","comment","map","Link","to","w","justifyContent","fontWeight","size","color","moment","createdAt","fromNow","icon","onSubmit","mr","isRequired","props","useDisclosure","commentIsOpen","commentOpen","onOpen","commentClose","ownPost","userId","likes","like","liked","setLiked","toast","useToast","bg","py","px","m","onDelete","title","duration","isClosable","minH","textAlign","overflowWrap","maxW","cursor","whileHover","scale","whileTap","style","PostSkeleton","noOfLines","Logo","noLink","fontFamily","lineHeight","Navbar","borderBottom","top","position","zIndex","Layout","children","posts","setPosts","signupController","email","password","axios","loginController","LoginForm","setUsername","setPassword","dispatch","history","useHistory","push","minW","toLowerCase","replace","SignupForm","onSignUp","setEmail","success","minLength","setLogin","_hover","textDecoration","getSingleUser","followUser","checkFollower","updateUser","bio","put","EditProfileButton","onUpdate","setName","setBio","FollowButton","following","setFollowing","follow","handleFollow","UserSkeleton","mt","useParams","loggedUsername","ownProfile","useMemo","setUser","followers","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7bd11a4e.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { UserSchema } from \"../../models/user\";\r\n\r\ninterface AuthState {\r\n  id: string | null;\r\n  username: string | null;\r\n  token: string | null;\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isLoggedIn: !!localStorage.getItem(\"token\"),\r\n  id: localStorage.getItem(\"id\"),\r\n  username: localStorage.getItem(\"username\"),\r\n  token: localStorage.getItem(\"token\"),\r\n};\r\n\r\nexport const sliceAuth = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    login: (\r\n      state,\r\n      action: PayloadAction<{ user: UserSchema; token: string }>\r\n    ) => {\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      localStorage.setItem(\"id\", action.payload.user.id);\r\n      localStorage.setItem(\"username\", action.payload.user.username);\r\n\r\n      state.id = action.payload.user.id;\r\n      state.username = action.payload.user.username;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n\r\n    logout: (state) => {\r\n      localStorage.clear();\r\n\r\n      state.id = null;\r\n      state.username = null;\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = sliceAuth.actions;\r\n\r\nexport const ReducerAuth = sliceAuth.reducer;\r\nexport const ActionAuth = sliceAuth.actions;\r\n","import { ReducerAuth } from \"./slices/sliceAuth\";\r\nimport { AnyAction, combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSelectorHook, useDispatch } from \"react-redux\";\r\n\r\nconst RootReducer = combineReducers({\r\n  auth: ReducerAuth,\r\n});\r\n\r\ntype ReducerParams = Parameters<typeof RootReducer>;\r\ntype ReducerReturn = ReturnType<typeof RootReducer>;\r\n\r\nconst ActionAppTypeResetStore = \"RESET_APP_REDUX_STORE\";\r\n\r\nexport const ActionApp = {\r\n  ResetStore: (): AnyAction => ({ type: ActionAppTypeResetStore }),\r\n};\r\n\r\nconst AppReducer = (...arg: ReducerParams): ReducerReturn => {\r\n  const [, action] = arg;\r\n  if (action.type === ActionAppTypeResetStore) {\r\n    return RootReducer(undefined, action);\r\n  }\r\n  return RootReducer(...arg);\r\n};\r\n\r\nexport const ITAppStore = configureStore({\r\n  reducer: AppReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport type ITAppState = ReturnType<typeof RootReducer>;\r\nexport type ITAppDispatch = typeof ITAppStore.dispatch;\r\nexport const useAppDispatch = () => useDispatch<ITAppDispatch>();\r\nexport const useAppSelector = createSelectorHook<ITAppState>();\r\n","import { AxiosInstance, AxiosRequestConfig } from \"axios\";\r\nexport class AuthInjector {\r\n  /**\r\n   * @static @function Add() Add interceptor to and instance\r\n   * @param {AxiosInstance} instance Instance of Axios\r\n   * @returns {number} Interceptor Id\r\n   */\r\n  static Add(instance: AxiosInstance): number {\r\n    function AuthTokenInject(\r\n      requestConfig: AxiosRequestConfig\r\n    ): AxiosRequestConfig {\r\n      const token = localStorage.getItem(\"token\");\r\n      const header = !!token\r\n        ? {\r\n            authorization: `Bearer ${token}`,\r\n          }\r\n        : {};\r\n      const headers = {\r\n        ...(requestConfig.headers ?? {}),\r\n        ...header,\r\n      };\r\n      return { ...requestConfig, headers };\r\n    }\r\n\r\n    return instance.interceptors.request.use(AuthTokenInject);\r\n  }\r\n\r\n  /**\r\n   * @static @function Remove() Eject the interceptor from the Axios instance\r\n   * @param {AxiosInstance} instance Instance of Axios\r\n   * @param {number} id Interceptor Id\r\n   */\r\n  static Remove(instance: AxiosInstance, id: number): void {\r\n    instance.interceptors.request.eject(id);\r\n  }\r\n}\r\n","import { AxiosInstance, AxiosError } from \"axios\";\r\n\r\nexport class RedirectUnauthorize {\r\n  /**\r\n   * @static @function Add() Add interceptor to and instance\r\n   * @param {AxiosInstance} instance Instance of Axios\r\n   * @param {string} redirectPath URL to redirect\r\n   * @param {(() => void) | undefined} onRedirect Optional callback to execute when redirecting\r\n   * @returns {number} Interceptor Id\r\n   */\r\n  static Add(\r\n    instance: AxiosInstance,\r\n    redirectPath: string,\r\n    onRedirect?: () => void\r\n  ): number {\r\n    function OnFailure(): void {\r\n      onRedirect?.();\r\n      window.location.href = redirectPath;\r\n    }\r\n    async function RedirectWhenUnauthorize(\r\n      err: AxiosError<{ [key: string]: unknown }>\r\n    ): Promise<unknown> {\r\n      if (err.response?.status === 403 || err.response?.status === 401) {\r\n        OnFailure();\r\n      }\r\n\r\n      throw new Error(\r\n        JSON.stringify(\r\n          err?.response ?? {\r\n            isSuccess: \"error\",\r\n            error: \"Request Error\",\r\n            message: \"Request Error\",\r\n          }\r\n        )\r\n      );\r\n    }\r\n\r\n    return instance.interceptors.response.use(\r\n      (r) => r,\r\n      RedirectWhenUnauthorize\r\n    );\r\n  }\r\n  /**\r\n   * @static @function Remove() Eject the interceptor from the Axios instance\r\n   * @param {AxiosInstance} instance Instance of Axios\r\n   * @param {number} id Interceptor Id\r\n   */\r\n  static Remove(instance: AxiosInstance, id: number): void {\r\n    instance.interceptors.response.eject(id);\r\n  }\r\n}\r\n","const RootApi =\r\n  process.env.REACT_APP_API_URL || \"https://instatweet-preview.herokuapp.com\";\r\n\r\nexport const AppRouteApi = {\r\n  Root: RootApi,\r\n  User: {\r\n    Root: () => `${AppRouteApi.Root}/users`,\r\n    Login: () => `${AppRouteApi.User.Root()}/login`,\r\n    SingleUser: (username: string) => `${AppRouteApi.User.Root()}/${username}`,\r\n  },\r\n  Post: {\r\n    Root: () => `${AppRouteApi.Root}/posts`,\r\n  },\r\n  Like: {\r\n    Root: () => `${AppRouteApi.Root}/likes`,\r\n  },\r\n  Comment: {\r\n    Root: () => `${AppRouteApi.Root}/comments`,\r\n  },\r\n  Follow: {\r\n    Root: () => `${AppRouteApi.Root}/followers`,\r\n    Check: () => `${AppRouteApi.Follow.Root()}/check`,\r\n  },\r\n};\r\n\r\nexport const AppRouteUi = {\r\n  Root: \"\",\r\n  Home: () => `${AppRouteUi.Root}/`,\r\n  Login: () => `${AppRouteUi.Root}/login`,\r\n  Logout: () => `${AppRouteUi.Root}/logout`,\r\n};\r\n","import Axios from \"axios\";\r\nimport { AuthInjector, RedirectUnauthorize } from \"./interceptors\";\r\nimport { AppRouteUi } from \"../config/appRoutes\";\r\n\r\nconst AxiosAuth = Axios.create();\r\n\r\nAuthInjector.Add(AxiosAuth);\r\nRedirectUnauthorize.Add(AxiosAuth, AppRouteUi.Logout(), () => {\r\n  localStorage.clear();\r\n});\r\n\r\nexport { AxiosAuth };\r\n","import { AxiosAuth } from \"../axios\";\r\nimport { AppRouteApi } from \"../config/appRoutes\";\r\nimport { ApiResponseSchema } from \"../models/apiResponse\";\r\nimport { ExtendedPostSchema } from \"../models/post\";\r\n\r\nexport const getAllPosts = async () => {\r\n  const res = await AxiosAuth.get<ApiResponseSchema<ExtendedPostSchema[]>>(\r\n    AppRouteApi.Post.Root()\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const likePost = async (postId: string) => {\r\n  const res = await AxiosAuth.post<ApiResponseSchema<{ message: string }>>(\r\n    AppRouteApi.Like.Root(),\r\n    { postId }\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const createPost = async (content: string) => {\r\n  const res = await AxiosAuth.post<ApiResponseSchema<ExtendedPostSchema>>(\r\n    AppRouteApi.Post.Root(),\r\n    { content }\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const deletePost = async (postId: string) => {\r\n  const res = await AxiosAuth.delete<ApiResponseSchema<{ message: string }>>(\r\n    `${AppRouteApi.Post.Root()}/${postId}`\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { Progress } from \"@chakra-ui/progress\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { useState } from \"react\";\r\nimport { useAppSelector } from \"../redux/ReduxStore\";\r\nimport { createPost } from \"../controllers/post\";\r\nimport { ExtendedPostSchema } from \"../models/post\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\n\r\nexport const AddPost = ({\r\n  onPost,\r\n}: {\r\n  onPost: (post: ExtendedPostSchema) => void;\r\n}) => {\r\n  const { username } = useAppSelector((state) => state.auth);\r\n  const [isButtonLoading, setIsButtonLoading] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    setIsButtonLoading(true);\r\n    setContent(\"\");\r\n    const res = await createPost(content);\r\n    res && onPost(res);\r\n    setIsButtonLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      as=\"form\"\r\n      my={3}\r\n      background=\"white\"\r\n      border=\"1px solid #DBDBDB\"\r\n      p={3}\r\n      rounded=\"md\"\r\n      display=\"flex\"\r\n    >\r\n      <Avatar\r\n        src={`https://avatars.dicebear.com/api/micah/${username}.svg`}\r\n        width=\"60px\"\r\n        height=\"60px\"\r\n        border=\"1px solid #DBDBDB\"\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        flexGrow={1}\r\n        ml={3}\r\n        flexDirection=\"column\"\r\n        alignItems=\"end\"\r\n      >\r\n        <Textarea\r\n          resize=\"none\"\r\n          fontSize=\"20px\"\r\n          height=\"100px\"\r\n          maxLength={100}\r\n          shadow=\"none\"\r\n          outline=\"none\"\r\n          p={0}\r\n          pt={1}\r\n          border=\"none\"\r\n          rounded=\"none\"\r\n          _focus={{ shadow: \"none\", outline: \"none\" }}\r\n          placeholder=\"What's happening?\"\r\n          _placeholder={{ fontSize: \"25px\" }}\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Progress\r\n          value={content.length}\r\n          colorScheme=\"teal\"\r\n          width=\"100%\"\r\n          mb={3}\r\n          height={1}\r\n        />\r\n        <Button\r\n          disabled={content.length === 0 || isButtonLoading}\r\n          variant=\"solid\"\r\n          colorScheme=\"teal\"\r\n          rounded=\"full\"\r\n          onClick={handleSubmit}\r\n        >\r\n          {isButtonLoading && <Spinner />} Instatweet\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import { motion } from \"framer-motion\";\r\nimport { Box, BoxProps } from \"@chakra-ui/layout\";\r\n\r\nexport const MotionBox = motion<BoxProps>(Box);\r\n","import { AxiosAuth } from \"../axios\";\r\nimport { AppRouteApi } from \"../config/appRoutes\";\r\nimport { ApiResponseSchema } from \"../models/apiResponse\";\r\nimport { CommentSchema } from \"../models/comment\";\r\n\r\nexport const makeComment = async (postId: string, content: string) => {\r\n  const res = await AxiosAuth.post<\r\n    ApiResponseSchema<\r\n      CommentSchema & {\r\n        user: { username: string };\r\n      }\r\n    >\r\n  >(AppRouteApi.Comment.Root(), { postId, content });\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const getPostComments = async (postId: string) => {\r\n  const res = await AxiosAuth.get<\r\n    ApiResponseSchema<\r\n      (CommentSchema & {\r\n        user: { username: string };\r\n      })[]\r\n    >\r\n  >(`${AppRouteApi.Comment.Root()}/${postId}`);\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const deleteComment = async (commentId: string) => {\r\n  const res = await AxiosAuth.delete<ApiResponseSchema<{ message: string }>>(\r\n    `${AppRouteApi.Comment.Root()}/${commentId}`\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Button, IconButton } from \"@chakra-ui/button\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport moment from \"moment\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  makeComment,\r\n  getPostComments,\r\n  deleteComment,\r\n} from \"../controllers/comment\";\r\nimport { CommentSchema } from \"../models/comment\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { useAppSelector } from \"../redux/ReduxStore\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CommentsModal = ({\r\n  isOpen,\r\n  onClose,\r\n  postId,\r\n}: {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  postId: string;\r\n}) => {\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isButtonLoading, setIsButtonLoading] = useState(false);\r\n  const [comments, setComments] = useState<\r\n    (CommentSchema & {\r\n      user: { username: string };\r\n    })[]\r\n  >([]);\r\n  const { username } = useAppSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    getPostComments(postId).then((res) => {\r\n      res && setComments(res);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    setIsButtonLoading(true);\r\n    const res = await makeComment(postId, newComment);\r\n    res && setComments([...comments, res]);\r\n    setNewComment(\"\");\r\n    setIsButtonLoading(false);\r\n  };\r\n\r\n  const handleDelete = async (commentId: string) => {\r\n    setComments(comments.filter((comment) => comment.id !== commentId));\r\n    await deleteComment(commentId);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Total {comments?.length} Comments</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          {isLoading || !comments ? (\r\n            <Spinner />\r\n          ) : (\r\n            <>\r\n              {comments.length\r\n                ? comments.map((comment) => (\r\n                    <Box display=\"flex\" key={comment.id} mb={4}>\r\n                      <Avatar\r\n                        as={Link}\r\n                        to={`/${comment.user.username}`}\r\n                        src={`https://avatars.dicebear.com/api/micah/${comment.user.username}.svg`}\r\n                        width=\"50px\"\r\n                        height=\"50px\"\r\n                        border=\"1px solid #DBDBDB\"\r\n                      />\r\n                      <Box ml={3} w=\"100%\">\r\n                        <Box display=\"flex\" justifyContent=\"space-between\">\r\n                          <Box>\r\n                            <Text\r\n                              fontWeight=\"bold\"\r\n                              as={Link}\r\n                              to={`/${comment.user.username}`}\r\n                            >\r\n                              {comment.user.username}\r\n                            </Text>\r\n                            <Text size=\"sm\" fontWeight=\"light\" color=\"#aaa\">\r\n                              {moment(comment.createdAt).fromNow()}\r\n                            </Text>\r\n                          </Box>\r\n                          {comment.user.username === username && (\r\n                            <IconButton\r\n                              variant=\"outline\"\r\n                              colorScheme=\"red\"\r\n                              aria-label=\"Delete Comment\"\r\n                              icon={<AiOutlineDelete />}\r\n                              size=\"sm\"\r\n                              onClick={() => handleDelete(comment.id)}\r\n                            />\r\n                          )}\r\n                        </Box>\r\n                        <Text>{comment.content}</Text>\r\n                      </Box>\r\n                    </Box>\r\n                  ))\r\n                : \"No Comments\"}\r\n              <Box display=\"flex\" as=\"form\" mb={3} onSubmit={handleSubmit}>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={newComment}\r\n                  mr={2}\r\n                  onChange={(e) => setNewComment(e.target.value)}\r\n                  isRequired\r\n                  placeholder=\"Write a comment...\"\r\n                />\r\n                <Button\r\n                  disabled={isButtonLoading}\r\n                  colorScheme=\"teal\"\r\n                  type=\"submit\"\r\n                  variant=\"solid\"\r\n                >\r\n                  {isButtonLoading && <Spinner />} Comment\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport { BsChatSquare, BsHeart, BsHeartFill } from \"react-icons/bs\";\r\nimport { ExtendedPostSchema } from \"../models/post\";\r\nimport { useAppSelector } from \"../redux/ReduxStore\";\r\nimport { MotionBox } from \"./motionBox\";\r\nimport { likePost, deletePost } from \"../controllers/post\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { CommentsModal } from \"./comments\";\r\nimport moment from \"moment\";\r\nimport { IconButton } from \"@chakra-ui/button\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Post = (\r\n  props: ExtendedPostSchema & { onDelete: (postId: string) => void }\r\n) => {\r\n  const { id } = useAppSelector((state) => state.auth);\r\n  const {\r\n    isOpen: commentIsOpen,\r\n    onOpen: commentOpen,\r\n    onClose: commentClose,\r\n  } = useDisclosure();\r\n  const ownPost = props.userId === id;\r\n\r\n  const [liked, setLiked] = useState(\r\n    props.likes?.filter((like) => like.userId === id).length > 0\r\n  );\r\n  const toast = useToast();\r\n\r\n  const handleLike = () => {\r\n    setLiked(!liked);\r\n    likePost(props.id).then((res) => res && setLiked(res.message === \"Liked\"));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    props.onDelete(props.id);\r\n    const res = deletePost(props.id);\r\n    toast({\r\n      title: !!res ? \"Post Deleted\" : \"Something went wrong\",\r\n      status: !!res ? \"success\" : \"error\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        border=\"1px solid #DBDBDB\"\r\n        my={4}\r\n        key={props.id}\r\n        rounded=\"md\"\r\n        bg=\"white\"\r\n      >\r\n        <Box py={2} px={3} display=\"flex\" justifyContent=\"space-between\">\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            as={Link}\r\n            to={`/${props.user.username}`}\r\n          >\r\n            <Avatar\r\n              src={`https://avatars.dicebear.com/api/micah/${props.user.username}.svg`}\r\n              width=\"40px\"\r\n              height=\"40px\"\r\n              border=\"1px solid #DBDBDB\"\r\n            />\r\n            <Text ml={3} fontWeight=\"bold\">\r\n              {props.user.username}\r\n            </Text>\r\n          </Box>\r\n          {ownPost && (\r\n            <IconButton\r\n              variant=\"outline\"\r\n              colorScheme=\"red\"\r\n              aria-label=\"Delete Comment\"\r\n              m={1}\r\n              icon={<AiOutlineDelete />}\r\n              size=\"sm\"\r\n              onClick={handleDelete}\r\n            />\r\n          )}\r\n        </Box>\r\n\r\n        <Box\r\n          bg=\"teal.700\"\r\n          color=\"white\"\r\n          minH=\"250px\"\r\n          textAlign=\"center\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Heading p={5} overflowWrap=\"break-word\" maxW=\"100%\">\r\n            {props.content}\r\n          </Heading>\r\n        </Box>\r\n        <Box p={3} display=\"flex\" justifyContent=\"space-between\">\r\n          <Box display=\"flex\" fontSize={30}>\r\n            <Box mr={4}>\r\n              <MotionBox\r\n                onClick={handleLike}\r\n                cursor=\"pointer\"\r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.9 }}\r\n              >\r\n                {liked ? (\r\n                  <BsHeartFill style={{ color: \"#ED4956\" }} />\r\n                ) : (\r\n                  <BsHeart />\r\n                )}\r\n              </MotionBox>\r\n            </Box>\r\n            <MotionBox\r\n              onClick={commentOpen}\r\n              cursor=\"pointer\"\r\n              whileHover={{ scale: 1.1 }}\r\n              whileTap={{ scale: 0.9 }}\r\n            >\r\n              <BsChatSquare />\r\n            </MotionBox>\r\n          </Box>\r\n          <Text size=\"sm\" fontWeight=\"light\">\r\n            {moment(props.createdAt).fromNow()}\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n\r\n      <CommentsModal\r\n        isOpen={commentIsOpen}\r\n        onClose={commentClose}\r\n        postId={props.id}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { Skeleton, SkeletonCircle, SkeletonText } from \"@chakra-ui/skeleton\";\r\n\r\nexport const PostSkeleton = () => {\r\n  return (\r\n    <Box border=\"1px solid #DBDBDB\" my={4} rounded=\"md\" bg=\"white\">\r\n      <Box py={2} px={3} display=\"flex\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SkeletonCircle size=\"40px\" />\r\n          <SkeletonText ml={3} noOfLines={1} width=\"100px\" />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Skeleton height=\"250px\" />\r\n      <Skeleton height=\"50px\" />\r\n    </Box>\r\n  );\r\n};\r\n","import { Text } from \"@chakra-ui/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppRouteUi } from \"../config/appRoutes\";\r\n\r\nexport const Logo = ({ noLink }: { noLink?: boolean }) => (\r\n  <Text\r\n    fontWeight=\"bolder\"\r\n    fontSize={35}\r\n    fontFamily=\"'Fleur De Leah', cursive\"\r\n    lineHeight=\"40px\"\r\n    as={Link}\r\n    to={noLink ? \"#\" : AppRouteUi.Home()}\r\n  >\r\n    InstaTweet\r\n  </Text>\r\n);\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { Container } from \"@chakra-ui/react\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useAppSelector } from \"../redux/ReduxStore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppRouteUi } from \"../config/appRoutes\";\r\nimport { IconButton } from \"@chakra-ui/button\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { Logo } from \"./logo\";\r\n\r\nexport const Navbar = () => {\r\n  const { username } = useAppSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Box\r\n      w=\"100%\"\r\n      display=\"block\"\r\n      borderBottom=\"1px solid #DBDBDB\"\r\n      background=\"#fff\"\r\n      p={4}\r\n      top={0}\r\n      position=\"fixed\"\r\n      zIndex=\"banner\"\r\n    >\r\n      <Container display=\"flex\" justifyContent=\"space-between\" maxW=\"xl\">\r\n        <Logo />\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Avatar\r\n            as={Link}\r\n            to={`/${username}`}\r\n            src={`https://avatars.dicebear.com/api/micah/${username}.svg`}\r\n            width=\"40px\"\r\n            height=\"40px\"\r\n            border=\"1px solid #DBDBDB\"\r\n          />\r\n          <IconButton\r\n            as={Link}\r\n            to={AppRouteUi.Logout()}\r\n            variant=\"outline\"\r\n            colorScheme=\"red\"\r\n            aria-label=\"Delete Comment\"\r\n            ml={3}\r\n            icon={<FiLogOut />}\r\n            size=\"sm\"\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import { Box, Container } from \"@chakra-ui/layout\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Navbar } from \"../components/navbar\";\r\nimport { useAppSelector } from \"../redux/ReduxStore\";\r\n\r\nexport const Layout = ({ children }: { children: React.ReactNode }) => {\r\n  const { isLoggedIn } = useAppSelector((state) => state.auth);\r\n\r\n  if (!isLoggedIn) return <Redirect to=\"/login\" />;\r\n\r\n  return (\r\n    <Box bg=\"#FAFAFA\" minH=\"100vh\">\r\n      <Navbar />\r\n      <Container pt=\"80px\" maxW=\"xl\">\r\n        {children}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { AddPost } from \"../components/addPost\";\r\nimport { Post } from \"../components/post\";\r\nimport { PostSkeleton } from \"../components/postSkeleton\";\r\nimport { getAllPosts } from \"../controllers/post\";\r\nimport { ExtendedPostSchema } from \"../models/post\";\r\nimport { Layout } from \"./layout\";\r\n\r\nexport const Home = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [posts, setPosts] = useState<ExtendedPostSchema[]>([]);\r\n\r\n  useEffect(() => {\r\n    getAllPosts().then((res) => {\r\n      res && setPosts(res);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const onPost = (post: ExtendedPostSchema) => {\r\n    setPosts([post, ...posts]);\r\n  };\r\n\r\n  const onDelete = (id: string) => {\r\n    setPosts(posts.filter((post) => post.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <AddPost onPost={onPost} />\r\n      {isLoading ? (\r\n        <>\r\n          <PostSkeleton />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {posts.map((post) => (\r\n            <Post key={post.id} onDelete={onDelete} {...post} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n","import { AppRouteApi } from \"../config/appRoutes\";\r\nimport { UserSchema } from \"../models/user\";\r\nimport { ApiResponseSchema } from \"../models/apiResponse\";\r\nimport axios from \"axios\";\r\n\r\nexport const signupController = async (\r\n  username: string,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  try {\r\n    const res = await axios.post<ApiResponseSchema<UserSchema>>(\r\n      AppRouteApi.User.Root(),\r\n      {\r\n        username,\r\n        email,\r\n        password,\r\n      }\r\n    );\r\n    return res.data.status === \"success\";\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const loginController = async (username: string, password: string) => {\r\n  try {\r\n    const res = await axios.post<\r\n      ApiResponseSchema<{ user: UserSchema; token: string }>\r\n    >(AppRouteApi.User.Login(), {\r\n      username,\r\n      password,\r\n    });\r\n    if (res.data.status === \"success\") return res.data.data;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport { loginController } from \"../controllers/auth\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { useAppDispatch } from \"../redux/ReduxStore\";\r\nimport { login } from \"../redux/slices/sliceAuth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AppRouteUi } from \"../config/appRoutes\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\n\r\nexport const LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const data = await loginController(username, password);\r\n    if (data) {\r\n      dispatch(login(data));\r\n      history.push(AppRouteUi.Home());\r\n    } else\r\n      toast({\r\n        title: \"Wrong credentials\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      as=\"form\"\r\n      flexGrow={1}\r\n      p={3}\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      onSubmit={handleSubmit}\r\n      minW=\"80%\"\r\n    >\r\n      <Input\r\n        type=\"text\"\r\n        mb={2}\r\n        value={username}\r\n        onChange={(e) =>\r\n          setUsername(e.target.value.toLowerCase().replace(/[^a-z0-9_]/g, \"\"))\r\n        }\r\n        isRequired\r\n        placeholder=\"Username\"\r\n      />\r\n      <Input\r\n        type=\"password\"\r\n        mb={3}\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        isRequired\r\n        placeholder=\"Password\"\r\n      />\r\n      <Button\r\n        disabled={isLoading}\r\n        colorScheme=\"teal\"\r\n        type=\"submit\"\r\n        variant=\"solid\"\r\n      >\r\n        {isLoading && <Spinner />} Login\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport { signupController } from \"../controllers/auth\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\n\r\nexport const SignupForm = ({ onSignUp }: { onSignUp: () => void }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n    const success = await signupController(username, email, password);\r\n    toast({\r\n      title: success\r\n        ? \"Account Created. Please log in.\"\r\n        : \"Username or email already exists.\",\r\n      status: success ? \"success\" : \"error\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n    if (success) {\r\n      setUsername(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      onSignUp();\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      as=\"form\"\r\n      flexGrow={1}\r\n      p={3}\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      onSubmit={handleSubmit}\r\n      minW=\"80%\"\r\n    >\r\n      <Input\r\n        type=\"text\"\r\n        mb={2}\r\n        value={username}\r\n        onChange={(e) =>\r\n          setUsername(e.target.value.toLowerCase().replace(/[^a-z0-9_]/g, \"\"))\r\n        }\r\n        isRequired\r\n        placeholder=\"Username\"\r\n      />\r\n      <Input\r\n        type=\"email\"\r\n        mb={2}\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value.toLowerCase())}\r\n        isRequired\r\n        placeholder=\"Email\"\r\n      />\r\n      <Input\r\n        type=\"password\"\r\n        mb={3}\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        isRequired\r\n        placeholder=\"Password\"\r\n        minLength={6}\r\n      />\r\n      <Button\r\n        disabled={isLoading}\r\n        colorScheme=\"teal\"\r\n        type=\"submit\"\r\n        variant=\"solid\"\r\n      >\r\n        {isLoading && <Spinner />} Sign Up\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n","import { Box, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { LoginForm } from \"../components/loginForm\";\r\nimport { Logo } from \"../components/logo\";\r\nimport { SignupForm } from \"../components/signupForm\";\r\nimport { useAppSelector } from \"../redux/ReduxStore\";\r\n\r\nexport const Login = () => {\r\n  const [login, setLogin] = useState(true);\r\n\r\n  const { isLoggedIn } = useAppSelector((state) => state.auth);\r\n\r\n  if (isLoggedIn) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Box\r\n      height=\"100vh\"\r\n      width=\"100vw\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      background=\"#FAFAFA\"\r\n    >\r\n      <Box\r\n        border=\"1px solid #DBDBDB\"\r\n        rounded=\"sm\"\r\n        p={5}\r\n        maxW={800}\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        m={2}\r\n        background=\"white\"\r\n        minW=\"35%\"\r\n      >\r\n        <Logo noLink />\r\n        <Heading mb={3} size=\"lg\" textAlign=\"center\" fontWeight=\"light\">\r\n          {login ? \"Login\" : \"Sign Up\"}\r\n        </Heading>\r\n        {login ? <LoginForm /> : <SignupForm onSignUp={() => setLogin(true)} />}\r\n        <Text\r\n          color=\"teal\"\r\n          cursor=\"pointer\"\r\n          _hover={{ textDecoration: \"underline\" }}\r\n          onClick={() => setLogin(!login)}\r\n        >\r\n          {login ? \"Don't have an account?\" : \"Already have an account!\"}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../redux/ReduxStore\";\r\nimport { logout } from \"../redux/slices/sliceAuth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AppRouteUi } from \"../config/appRoutes\";\r\n\r\nexport const Logout = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(logout());\r\n    history.push(AppRouteUi.Login());\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n","import { AxiosAuth } from \"../axios\";\r\nimport { ExtendedUserSchema } from \"../models/user\";\r\nimport { AppRouteApi } from \"../config/appRoutes\";\r\nimport { ApiResponseSchema } from \"../models/apiResponse\";\r\n\r\nexport const getSingleUser = async (username: string) => {\r\n  const res = await AxiosAuth.get<ApiResponseSchema<ExtendedUserSchema>>(\r\n    AppRouteApi.User.SingleUser(username)\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const followUser = async (userId: string) => {\r\n  const res = await AxiosAuth.post<ApiResponseSchema<{ message: string }>>(\r\n    AppRouteApi.Follow.Root(),\r\n    { userId }\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const checkFollower = async (userId: string) => {\r\n  const res = await AxiosAuth.post<ApiResponseSchema<{ follow: boolean }>>(\r\n    AppRouteApi.Follow.Check(),\r\n    { userId }\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n\r\nexport const updateUser = async (name: string, bio: string) => {\r\n  const res = await AxiosAuth.put<ApiResponseSchema<ExtendedUserSchema>>(\r\n    AppRouteApi.User.Root(),\r\n    { name, bio }\r\n  );\r\n\r\n  if (res.data.status === \"success\") return res.data.data;\r\n  else return false;\r\n};\r\n","import { ExtendedUserSchema } from \"../models/user\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { useState } from \"react\";\r\nimport { updateUser } from \"../controllers/user\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { Text, Box } from \"@chakra-ui/layout\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\n\r\nexport const EditProfileButton = ({\r\n  user,\r\n  onUpdate,\r\n}: {\r\n  user: ExtendedUserSchema;\r\n  onUpdate: (user: ExtendedUserSchema) => void;\r\n}) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [username, setUsername] = useState(user.username);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [name, setName] = useState(user.name);\r\n  const [bio, setBio] = useState(user.bio);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true);\r\n    const res = await updateUser(name, bio);\r\n    res && onUpdate(res);\r\n    setIsLoading(false);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button size=\"sm\" variant=\"outline\" onClick={onOpen} colorScheme=\"teal\">\r\n        <FiEdit />\r\n        <Text ml={2}>Edit</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Update Profile</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Box>\r\n              <Input\r\n                value={username}\r\n                mb={2}\r\n                onChange={(e) => setUsername(e.target.value.toLowerCase())}\r\n                disabled\r\n                placeholder=\"username\"\r\n              />\r\n              <Input\r\n                value={email}\r\n                mb={2}\r\n                onChange={(e) => setEmail(e.target.value.toLowerCase())}\r\n                disabled\r\n                type=\"email\"\r\n                maxLength={75}\r\n                placeholder=\"email\"\r\n              />\r\n              <Input\r\n                value={name}\r\n                mb={2}\r\n                onChange={(e) => setName(e.target.value)}\r\n                maxLength={50}\r\n                placeholder=\"Name\"\r\n              />\r\n              <Textarea\r\n                resize=\"none\"\r\n                maxLength={100}\r\n                placeholder=\"Bio\"\r\n                value={bio}\r\n                mb={2}\r\n                onChange={(e) => setBio(e.target.value)}\r\n              />\r\n            </Box>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              disabled={isLoading}\r\n              variant=\"outline\"\r\n              colorScheme=\"teal\"\r\n              onClick={handleSubmit}\r\n            >\r\n              {isLoading && <Spinner />} Update\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Text } from \"@chakra-ui/layout\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FiUserMinus, FiUserPlus } from \"react-icons/fi\";\r\nimport { checkFollower, followUser } from \"../controllers/user\";\r\n\r\nexport const FollowButton = ({ userId }: { userId: string }) => {\r\n  const [following, setFollowing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkFollower(userId).then((res) => {\r\n      res && setFollowing(res.follow);\r\n      setIsLoading(false);\r\n    });\r\n  }, [userId]);\r\n\r\n  const handleFollow = async () => {\r\n    setFollowing(!following);\r\n    const res = await followUser(userId);\r\n    res && setFollowing(res.message === \"Followed\");\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      size=\"sm\"\r\n      colorScheme={following ? \"red\" : \"teal\"}\r\n      variant=\"outline\"\r\n      onClick={handleFollow}\r\n      disabled={isLoading}\r\n    >\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : following ? (\r\n        <>\r\n          <FiUserMinus />\r\n          <Text ml={2}>Unfollow</Text>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <FiUserPlus />\r\n          <Text ml={2}>Follow</Text>\r\n        </>\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { SkeletonCircle } from \"@chakra-ui/skeleton\";\r\nimport { SkeletonText } from \"@chakra-ui/react\";\r\nimport { PostSkeleton } from \"./postSkeleton\";\r\n\r\nexport const UserSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Box border=\"1px solid #DBDBDB\" my={4} rounded=\"md\" bg=\"white\">\r\n        <Box\r\n          display=\"flex\"\r\n          m={4}\r\n          alignItems=\"center\"\r\n          flexDirection={[\"column\", \"column\", \"row\"]}\r\n        >\r\n          <SkeletonCircle size=\"100px\" />\r\n          <Box\r\n            mt={[3, 3, 0]}\r\n            ml={[0, 0, 3]}\r\n            textAlign={[\"center\", \"center\", \"left\"]}\r\n          >\r\n            <SkeletonText width=\"100px\" />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <PostSkeleton />\r\n      <PostSkeleton />\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Layout } from \"./layout\";\r\nimport { ExtendedUserSchema } from \"../models/user\";\r\nimport { getSingleUser } from \"../controllers/user\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { Box, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Post } from \"../components/post\";\r\nimport { useAppSelector } from \"../redux/ReduxStore\";\r\nimport { AddPost } from \"../components/addPost\";\r\nimport { ExtendedPostSchema } from \"../models/post\";\r\nimport { EditProfileButton } from \"../components/editProfile\";\r\nimport { FollowButton } from \"../components/followButton\";\r\nimport { UserSkeleton } from \"../components/userSkeleton\";\r\n\r\nexport const User = () => {\r\n  const { username } = useParams<{ username: string }>();\r\n\r\n  const { username: loggedUsername } = useAppSelector((state) => state.auth);\r\n\r\n  const ownProfile = useMemo(\r\n    () => username === loggedUsername,\r\n    [loggedUsername, username]\r\n  );\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [user, setUser] = useState<ExtendedUserSchema>();\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getSingleUser(username).then((res) => {\r\n      if (res) setUser(res);\r\n      else\r\n        toast({\r\n          title: \"Something went wrong\",\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n\r\n      setIsLoading(false);\r\n    });\r\n  }, [toast, username]);\r\n\r\n  const onDelete = (id: string) => {\r\n    user &&\r\n      setUser({ ...user, posts: user?.posts.filter((post) => post.id !== id) });\r\n  };\r\n\r\n  const onPost = (post: ExtendedPostSchema) => {\r\n    user && setUser({ ...user, posts: [post, ...user.posts] });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {isLoading || !user ? (\r\n        <UserSkeleton />\r\n      ) : (\r\n        <>\r\n          <Box border=\"1px solid #DBDBDB\" my={4} rounded=\"md\" bg=\"white\">\r\n            <Box\r\n              display=\"flex\"\r\n              m={4}\r\n              alignItems=\"center\"\r\n              flexDirection={[\"column\", \"column\", \"row\"]}\r\n            >\r\n              <Avatar\r\n                src={`https://avatars.dicebear.com/api/micah/${user.username}.svg`}\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                border=\"1px solid #DBDBDB\"\r\n              />\r\n              <Box\r\n                mt={[3, 3, 0]}\r\n                ml={[0, 0, 3]}\r\n                textAlign={[\"center\", \"center\", \"left\"]}\r\n              >\r\n                <Heading size=\"md\" mb={2}>\r\n                  {user.username}\r\n                  {user.name && (\r\n                    <Text display=\"inline\" ml={1} fontSize=\"sm\">\r\n                      ({user.name})\r\n                    </Text>\r\n                  )}\r\n                </Heading>\r\n                {user.bio && (\r\n                  <Heading size=\"sm\" color=\"gray\" mb={2} fontWeight=\"light\">\r\n                    {user.bio}\r\n                  </Heading>\r\n                )}\r\n                {ownProfile ? (\r\n                  <>\r\n                    <EditProfileButton onUpdate={setUser} user={user} />\r\n                    <Heading size=\"sm\" mt={2} fontWeight=\"light\">\r\n                      You have {user.followers.length} followers\r\n                    </Heading>\r\n                  </>\r\n                ) : (\r\n                  <FollowButton userId={user.id} />\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          {ownProfile && <AddPost onPost={onPost} />}\r\n          {user.posts.map((post) => (\r\n            <Post key={post.id} onDelete={onDelete} {...post} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Home } from \"./pages/home\";\nimport { Login } from \"./pages/login\";\nimport \"./App.css\";\nimport { Logout } from \"./pages/logout\";\nimport { User } from \"./pages/user\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/logout\">\n            <Logout />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/:username\">\n            <User />\n          </Route>\n        </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { ITAppStore } from \"./redux/ReduxStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ITAppStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}